# DLtrollex - –£–õ–¨–¢–†–ê –ö–ê–°–¢–û–ú–ò–ó–ò–†–£–ï–ú–´–ô –ß–ê–¢ (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)
from flask import Flask, render_template_string, request, jsonify
import datetime
import random
import os
import json

app = Flask(__name__)
app.config['SECRET_KEY'] = 'mydltrollex2024'

# –ü—Ä–æ—Å—Ç–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –ø–∞–º—è—Ç–∏
users_db = {}
messages_db = {}
news_messages = [
    {
        'id': '1',
        'text': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ DLtrollex! üéâ',
        'sender_name': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
        'timestamp': datetime.datetime.now().isoformat(),
    },
    {
        'id': '2', 
        'text': '–≠—Ç–æ —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–µ–π! üíú',
        'sender_name': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', 
        'timestamp': datetime.datetime.now().isoformat(),
    }
]

# –ê–¥–º–∏–Ω
ADMIN_PASSWORD = "dltrollex123"

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–≤–∏–∫–æ–Ω —Ä–æ—É—Ç —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å 404 –æ—à–∏–±–∫—É
@app.route('/favicon.ico')
def favicon():
    return '', 204

@app.route('/health')
def health_check():
    return jsonify({'status': 'healthy', 'message': 'DLtrollex is running'})

def generate_user_id():
    return str(int(datetime.datetime.now().timestamp() * 1000)) + str(random.randint(1000, 9999))

HTML_TEMPLATE = '''
<!DOCTYPE html>
<html>
<head>
    <title>DLtrollex</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='.9em' font-size='90'>üíú</text></svg>">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Arial, sans-serif;
        }
        
        :root {
            --bg-color: #0f0f0f;
            --card-color: #1a1a1a;
            --accent-color: #8b5cf6;
            --text-color: #ffffff;
            --secondary-color: #2d2d2d;
            --border-color: #3d3d3d;
        }
        
        body {
            background: var(--bg-color);
            color: var(--text-color);
            height: 100vh;
            overflow: hidden;
            transition: all 0.3s ease;
        }
        
        @keyframes glow {
            0%, 100% {
                text-shadow: 0 0 10px var(--accent-color), 0 0 20px var(--accent-color);
            }
            50% {
                text-shadow: 0 0 20px var(--accent-color), 0 0 30px var(--accent-color), 0 0 40px var(--accent-color);
            }
        }
        
        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
        }
        
        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .glowing-logo {
            animation: glow 3s ease-in-out infinite;
        }
        
        .floating {
            animation: float 6s ease-in-out infinite;
        }
        
        .pulse {
            animation: pulse 2s ease-in-out infinite;
        }
        
        .fade-in {
            animation: fadeIn 0.5s ease-out;
        }
        
        .screen {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            background: linear-gradient(135deg, var(--bg-color) 0%, var(--card-color) 100%);
            z-index: 1000;
        }
        
        .auth-box {
            background: var(--card-color);
            padding: 50px;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.5);
            border: 2px solid var(--accent-color);
            width: 450px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }
        
        .auth-box::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(45deg, transparent, var(--accent-color), transparent);
            animation: shine 3s linear infinite;
            opacity: 0.1;
        }
        
        @keyframes shine {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .logo {
            font-size: 48px;
            font-weight: bold;
            color: var(--accent-color);
            margin-bottom: 15px;
        }
        
        .subtitle {
            color: #888;
            margin-bottom: 40px;
            font-size: 16px;
        }
        
        .input-field {
            width: 100%;
            padding: 18px;
            margin-bottom: 20px;
            background: var(--secondary-color);
            border: 2px solid var(--border-color);
            border-radius: 12px;
            color: var(--text-color);
            font-size: 16px;
            transition: all 0.3s ease;
        }
        
        .input-field:focus {
            outline: none;
            border-color: var(--accent-color);
            box-shadow: 0 0 20px rgba(139, 92, 246, 0.3);
            transform: translateY(-2px);
        }
        
        .optional {
            color: #888;
            font-size: 12px;
            margin-top: -15px;
            margin-bottom: 20px;
            text-align: left;
        }
        
        .btn {
            width: 100%;
            padding: 18px;
            background: linear-gradient(135deg, var(--accent-color), #7e22ce);
            color: white;
            border: none;
            border-radius: 12px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            margin-bottom: 20px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(139, 92, 246, 0.4);
        }
        
        .btn:active {
            transform: translateY(0);
        }
        
        .btn::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            transform: translate(-50%, -50%);
            transition: width 0.3s, height 0.3s;
        }
        
        .btn:active::after {
            width: 100px;
            height: 100px;
        }
        
        .btn-admin {
            background: linear-gradient(135deg, #dc2626, #b91c1c);
        }
        
        .btn-admin:hover {
            box-shadow: 0 10px 25px rgba(220, 38, 38, 0.4);
        }
        
        .error {
            color: #ef4444;
            margin-top: 15px;
            padding: 10px;
            background: rgba(239, 68, 68, 0.1);
            border-radius: 8px;
            border: 1px solid #ef4444;
        }
        
        .success {
            color: #10b981;
            margin-top: 15px;
            padding: 10px;
            background: rgba(16, 185, 129, 0.1);
            border-radius: 8px;
            border: 1px solid #10b981;
        }
        
        .hidden {
            display: none !important;
        }
        
        .app {
            display: none;
            height: 100vh;
            background: var(--bg-color);
        }
        
        .notification-toast {
            position: fixed;
            top: 20px;
            right: 20px;
            background: var(--accent-color);
            color: white;
            padding: 15px 25px;
            border-radius: 10px;
            z-index: 3000;
            animation: slideIn 0.3s ease-out;
            box-shadow: 0 10px 30px rgba(0,0,0,0.3);
        }
        
        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
        
        /* –ù–æ–≤—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ */
        .chat-container {
            display: flex;
            height: 100vh;
        }
        
        .sidebar {
            width: 300px;
            background: var(--card-color);
            border-right: 1px solid var(--border-color);
            display: flex;
            flex-direction: column;
        }
        
        .chat-area {
            flex: 1;
            display: flex;
            flex-direction: column;
        }
        
        .messages-container {
            flex: 1;
            padding: 20px;
            overflow-y: auto;
        }
        
        .message-input {
            padding: 20px;
            background: var(--card-color);
            border-top: 1px solid var(--border-color);
        }
        
        .message {
            background: var(--secondary-color);
            padding: 15px;
            border-radius: 15px;
            margin-bottom: 15px;
            max-width: 70%;
            animation: fadeIn 0.3s ease-out;
        }
        
        .message.own {
            background: var(--accent-color);
            margin-left: auto;
        }
        
        .user-card {
            display: flex;
            align-items: center;
            padding: 15px;
            border-bottom: 1px solid var(--border-color);
            cursor: pointer;
            transition: background 0.3s ease;
        }
        
        .user-card:hover {
            background: var(--secondary-color);
        }
        
        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            margin-right: 15px;
        }
        
        .online-indicator {
            width: 8px;
            height: 8px;
            background: #10b981;
            border-radius: 50%;
            position: absolute;
            bottom: 0;
            right: 0;
            border: 2px solid var(--card-color);
        }
        
        .settings-panel {
            background: var(--card-color);
            padding: 30px;
            border-radius: 15px;
            margin: 20px;
        }
        
        .color-picker {
            display: flex;
            gap: 10px;
            margin: 15px 0;
        }
        
        .color-option {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            cursor: pointer;
            border: 2px solid transparent;
            transition: transform 0.2s ease;
        }
        
        .color-option:hover {
            transform: scale(1.1);
        }
        
        .color-option.active {
            border-color: white;
            transform: scale(1.2);
        }
    </style>
</head>
<body>
    <!-- –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ -->
    <div id="mainScreen" class="screen">
        <div class="auth-box floating">
            <div class="logo glowing-logo">üíú DLtrollex</div>
            <div class="subtitle">–§–∏–æ–ª–µ—Ç–æ–≤—ã–π —á–∞—Ç —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–µ–π</div>
            
            <button class="btn pulse" id="startChatBtn">
                <span>üöÄ –ù–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ</span>
            </button>
            
            <button class="btn btn-admin pulse" id="adminAccessBtn">
                <span>üëë –í–æ–π—Ç–∏ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</span>
            </button>
            
            <div style="margin-top: 20px; color: #666; font-size: 12px;">
                üî• –ù–æ–≤–æ–µ: –ß–∞—Ç, —Ç–µ–º—ã, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏!
            </div>
        </div>
    </div>

    <!-- –≠–∫—Ä–∞–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ -->
    <div id="registerScreen" class="screen hidden">
        <div class="auth-box floating">
            <div class="logo glowing-logo">üíú DLtrollex</div>
            <div class="subtitle">–°–æ–∑–¥–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞</div>
            
            <input type="text" id="regName" class="input-field" placeholder="üíÅ –í–∞—à–µ –∏–º—è" required>
            <input type="text" id="regUsername" class="input-field" placeholder="üë§ @username (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)">
            <div class="optional">‚ú® –Æ–∑–µ—Ä–Ω–µ–π–º –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω. –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞—Ç—å, –±—É–¥–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</div>
            
            <button class="btn pulse" id="registerBtn">
                <span>üöÄ –ù–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ</span>
            </button>
            
            <button class="btn" id="backToMainBtn">
                <span>‚Üê –ù–∞–∑–∞–¥</span>
            </button>
            
            <div id="registerError" class="error"></div>
            <div id="registerSuccess" class="success hidden"></div>
        </div>
    </div>

    <!-- –≠–∫—Ä–∞–Ω –≤—Ö–æ–¥–∞ –∞–¥–º–∏–Ω–∞ -->
    <div id="adminScreen" class="screen hidden">
        <div class="auth-box floating">
            <div class="logo glowing-logo">üíú DLtrollex</div>
            <div class="subtitle">–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</div>
            
            <input type="password" id="adminPass" class="input-field" placeholder="üîí –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞">
            
            <button class="btn btn-admin pulse" id="adminLoginBtn">‚ö° –í–æ–π—Ç–∏</button>
            
            <button class="btn" id="backToMainFromAdminBtn">
                <span>‚Üê –ù–∞–∑–∞–¥</span>
            </button>
            
            <div id="adminError" class="error"></div>
        </div>
    </div>

    <!-- –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞ -->
    <div id="mainApp" class="app">
        <!-- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±—É–¥–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è JavaScript -->
    </div>

    <script>
        let currentUser = null;
        let currentTheme = 'purple';
        let onlineUsers = [];

        document.addEventListener('DOMContentLoaded', function() {
            console.log("üöÄ DLtrollex –∑–∞–≥—Ä—É–∂–µ–Ω!");
            setupEventListeners();
            checkAutoLogin();
            loadTheme();
        });

        function setupEventListeners() {
            // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –∏—Å–ø–æ–ª—å–∑—É–µ–º onclick –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
            document.getElementById('startChatBtn').onclick = showRegisterScreen;
            document.getElementById('adminAccessBtn').onclick = showAdminScreen;
            document.getElementById('backToMainBtn').onclick = showMainScreen;
            document.getElementById('backToMainFromAdminBtn').onclick = showMainScreen;
            document.getElementById('registerBtn').onclick = register;
            document.getElementById('adminLoginBtn').onclick = adminLogin;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∞–≤–∏—à –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
            document.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    if (!document.getElementById('registerScreen').classList.contains('hidden')) {
                        register();
                    }
                    if (!document.getElementById('adminScreen').classList.contains('hidden')) {
                        adminLogin();
                    }
                }
            });
        }

        function checkAutoLogin() {
            const savedUser = localStorage.getItem('dlcurrentUser');
            if (savedUser) {
                try {
                    currentUser = JSON.parse(savedUser);
                    console.log("üîë –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—Ö–æ–¥:", currentUser);
                    showMainApp();
                } catch (e) {
                    console.log("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—Ö–æ–¥–∞:", e);
                    localStorage.removeItem('dlcurrentUser');
                }
            }
        }

        function loadTheme() {
            const savedTheme = localStorage.getItem('dltheme');
            if (savedTheme) {
                currentTheme = savedTheme;
                applyTheme(savedTheme);
            }
        }

        function showMainScreen() {
            document.getElementById('mainScreen').classList.remove('hidden');
            document.getElementById('registerScreen').classList.add('hidden');
            document.getElementById('adminScreen').classList.add('hidden');
        }

        function showRegisterScreen() {
            document.getElementById('mainScreen').classList.add('hidden');
            document.getElementById('registerScreen').classList.remove('hidden');
            document.getElementById('adminScreen').classList.add('hidden');
        }

        function showAdminScreen() {
            document.getElementById('mainScreen').classList.add('hidden');
            document.getElementById('registerScreen').classList.add('hidden');
            document.getElementById('adminScreen').classList.remove('hidden');
        }

        function showMainApp() {
            document.getElementById('mainScreen').classList.add('hidden');
            document.getElementById('registerScreen').classList.add('hidden');
            document.getElementById('adminScreen').classList.add('hidden');
            document.getElementById('mainApp').style.display = 'block';
            
            renderChatInterface();
            showNotification('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ DLtrollex!', 'success');
        }

        function renderChatInterface() {
            const isAdmin = currentUser && currentUser.is_admin;
            
            document.getElementById('mainApp').innerHTML = `
                <div class="chat-container">
                    <!-- –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å -->
                    <div class="sidebar">
                        <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ -->
                        <div style="padding: 20px; border-bottom: 1px solid var(--border-color);">
                            <div class="logo" style="font-size: 24px; margin-bottom: 10px;">üíú DLtrollex</div>
                            <div style="color: #888; font-size: 12px;">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${currentUser.name}!</div>
                        </div>
                        
                        <!-- –û–Ω–ª–∞–π–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ -->
                        <div style="padding: 15px; border-bottom: 1px solid var(--border-color);">
                            <div style="font-weight: bold; margin-bottom: 10px;">üë• –û–Ω–ª–∞–π–Ω (${onlineUsers.length + 1})</div>
                            <div class="user-card">
                                <div style="position: relative;">
                                    <div class="user-avatar" style="background: ${currentUser.avatar_bg || '#6b21a8'};">${currentUser.avatar || 'üë§'}</div>
                                    <div class="online-indicator"></div>
                                </div>
                                <div>
                                    <div style="font-weight: bold;">${currentUser.name}</div>
                                    <div style="color: #888; font-size: 12px;">${currentUser.username}</div>
                                </div>
                            </div>
                            ${onlineUsers.map(user => `
                                <div class="user-card">
                                    <div style="position: relative;">
                                        <div class="user-avatar" style="background: ${user.avatar_bg || '#6b21a8'};">${user.avatar || 'üë§'}</div>
                                        <div class="online-indicator"></div>
                                    </div>
                                    <div>
                                        <div style="font-weight: bold;">${user.name}</div>
                                        <div style="color: #888; font-size: 12px;">${user.username}</div>
                                    </div>
                                </div>
                            `).join('')}
                        </div>
                        
                        <!-- –ù–∞–≤–∏–≥–∞—Ü–∏—è -->
                        <div style="flex: 1; padding: 15px;">
                            <button class="btn" onclick="showChat()" style="margin-bottom: 10px;">üí¨ –ß–∞—Ç</button>
                            <button class="btn" onclick="showSettings()" style="margin-bottom: 10px;">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</button>
                            ${isAdmin ? '<button class="btn btn-admin" onclick="showAdminPanel()">üëë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</button>' : ''}
                        </div>
                        
                        <!-- –í—ã—Ö–æ–¥ -->
                        <div style="padding: 15px;">
                            <button class="btn" onclick="logout()">üö™ –í—ã–π—Ç–∏</button>
                        </div>
                    </div>
                    
                    <!-- –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å -->
                    <div class="chat-area">
                        <div id="chatContent" style="flex: 1; padding: 20px;">
                            <!-- –°—é–¥–∞ –±—É–¥–µ—Ç –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å—Å—è –∫–æ–Ω—Ç–µ–Ω—Ç -->
                            <div style="text-align: center; padding: 50px;">
                                <div class="logo glowing-logo" style="font-size: 80px;">üíú</div>
                                <h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ DLtrollex!</h1>
                                <p style="margin: 20px 0;">–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é —Å–ª–µ–≤–∞</p>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            
            // –ò–º–∏—Ç–∏—Ä—É–µ–º –æ–Ω–ª–∞–π–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            simulateOnlineUsers();
        }

        function showChat() {
            document.getElementById('chatContent').innerHTML = `
                <div class="messages-container" id="messagesContainer">
                    <div class="message">
                        <strong>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:</strong> –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ DLtrollex! üéâ
                        <div style="color: #888; font-size: 12px; margin-top: 5px;">–¢–æ–ª—å–∫–æ —á—Ç–æ</div>
                    </div>
                    <div class="message">
                        <strong>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:</strong> –≠—Ç–æ —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–µ–π! üíú
                        <div style="color: #888; font-size: 12px; margin-top: 5px;">–¢–æ–ª—å–∫–æ —á—Ç–æ</div>
                    </div>
                    <div class="message own">
                        <strong>–í—ã:</strong> –ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º! üëã
                        <div style="color: rgba(255,255,255,0.7); font-size: 12px; margin-top: 5px;">–¢–æ–ª—å–∫–æ —á—Ç–æ</div>
                    </div>
                </div>
                <div class="message-input">
                    <input type="text" id="messageInput" class="input-field" placeholder="üí¨ –ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..." style="margin-bottom: 10px;">
                    <button class="btn" onclick="sendMessage()">üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
                </div>
            `;
        }

        function showSettings() {
            document.getElementById('chatContent').innerHTML = `
                <div class="settings-panel fade-in">
                    <h2>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞</h2>
                    
                    <div style="margin: 20px 0;">
                        <h3>üé® –¶–≤–µ—Ç–æ–≤–∞—è —Ç–µ–º–∞</h3>
                        <div class="color-picker">
                            <div class="color-option ${currentTheme === 'purple' ? 'active' : ''}" 
                                 style="background: #8b5cf6;" 
                                 onclick="changeTheme('purple')" 
                                 title="–§–∏–æ–ª–µ—Ç–æ–≤–∞—è"></div>
                            <div class="color-option ${currentTheme === 'blue' ? 'active' : ''}" 
                                 style="background: #3b82f6;" 
                                 onclick="changeTheme('blue')" 
                                 title="–°–∏–Ω—è—è"></div>
                            <div class="color-option ${currentTheme === 'green' ? 'active' : ''}" 
                                 style="background: #10b981;" 
                                 onclick="changeTheme('green')" 
                                 title="–ó–µ–ª–µ–Ω–∞—è"></div>
                            <div class="color-option ${currentTheme === 'red' ? 'active' : ''}" 
                                 style="background: #ef4444;" 
                                 onclick="changeTheme('red')" 
                                 title="–ö—Ä–∞—Å–Ω–∞—è"></div>
                            <div class="color-option ${currentTheme === 'pink' ? 'active' : ''}" 
                                 style="background: #ec4899;" 
                                 onclick="changeTheme('pink')" 
                                 title="–†–æ–∑–æ–≤–∞—è"></div>
                        </div>
                    </div>
                    
                    <div style="margin: 20px 0;">
                        <h3>üë§ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è</h3>
                        <input type="text" id="userName" class="input-field" placeholder="–ò–º—è" value="${currentUser.name}">
                        <input type="text" id="userUsername" class="input-field" placeholder="–Æ–∑–µ—Ä–Ω–µ–π–º" value="${currentUser.username}">
                        <button class="btn" onclick="updateProfile()">üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                    </div>
                    
                    <div style="margin: 20px 0;">
                        <h3>üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
                        <label style="display: flex; align-items: center; margin: 10px 0;">
                            <input type="checkbox" id="notifications" checked> 
                            <span style="margin-left: 10px;">–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
                        </label>
                    </div>
                </div>
            `;
        }

        function showAdminPanel() {
            document.getElementById('chatContent').innerHTML = `
                <div class="settings-panel fade-in">
                    <h2>üëë –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h2>
                    
                    <div style="margin: 20px 0;">
                        <h3>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
                        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px; margin: 15px 0;">
                            <div style="background: var(--secondary-color); padding: 20px; border-radius: 10px; text-align: center;">
                                <div style="font-size: 24px; font-weight: bold; color: var(--accent-color);">${Object.keys(users_db).length}</div>
                                <div style="color: #888;">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</div>
                            </div>
                            <div style="background: var(--secondary-color); padding: 20px; border-radius: 10px; text-align: center;">
                                <div style="font-size: 24px; font-weight: bold; color: var(--accent-color);">${news_messages.length}</div>
                                <div style="color: #888;">–ù–æ–≤–æ—Å—Ç–µ–π</div>
                            </div>
                        </div>
                    </div>
                    
                    <div style="margin: 20px 0;">
                        <h3>üì¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç—è–º–∏</h3>
                        <textarea id="newsText" class="input-field" placeholder="–¢–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏..." rows="3"></textarea>
                        <button class="btn btn-admin" onclick="addNews()">üì¢ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å</button>
                    </div>
                    
                    <div style="margin: 20px 0;">
                        <h3>üõ†Ô∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
                        <button class="btn" onclick="clearAllData()">üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ</button>
                        <button class="btn btn-admin" onclick="restartServer()">üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä</button>
                    </div>
                </div>
            `;
        }

        function changeTheme(theme) {
            currentTheme = theme;
            localStorage.setItem('dltheme', theme);
            applyTheme(theme);
            showNotification(`–¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ ${theme}`, 'success');
        }

        function applyTheme(theme) {
            const root = document.documentElement;
            const themes = {
                purple: { accent: '#8b5cf6' },
                blue: { accent: '#3b82f6' },
                green: { accent: '#10b981' },
                red: { accent: '#ef4444' },
                pink: { accent: '#ec4899' }
            };
            
            if (themes[theme]) {
                root.style.setProperty('--accent-color', themes[theme].accent);
            }
        }

        function updateProfile() {
            const newName = document.getElementById('userName').value;
            const newUsername = document.getElementById('userUsername').value;
            
            if (newName) {
                currentUser.name = newName;
                currentUser.username = newUsername;
                localStorage.setItem('dlcurrentUser', JSON.stringify(currentUser));
                showNotification('–ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω!', 'success');
            }
        }

        function sendMessage() {
            const input = document.getElementById('messageInput');
            const message = input.value.trim();
            
            if (message) {
                const messagesContainer = document.getElementById('messagesContainer');
                const messageElement = document.createElement('div');
                messageElement.className = 'message own fade-in';
                messageElement.innerHTML = `
                    <strong>–í—ã:</strong> ${message}
                    <div style="color: rgba(255,255,255,0.7); font-size: 12px; margin-top: 5px;">–¢–æ–ª—å–∫–æ —á—Ç–æ</div>
                `;
                messagesContainer.appendChild(messageElement);
                input.value = '';
                messagesContainer.scrollTop = messagesContainer.scrollHeight;
                
                // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞
                setTimeout(() => {
                    const responses = [
                        '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞? üòä',
                        '–ö–ª–∞—Å—Å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! üëç',
                        '–Ø –±–æ—Ç, –Ω–æ —Å–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥—É—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –ª—é–¥–∏! ü§ñ',
                        'DLtrollex - –ª—É—á—à–∏–π –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä! üíú'
                    ];
                    const response = responses[Math.floor(Math.random() * responses.length)];
                    
                    const responseElement = document.createElement('div');
                    responseElement.className = 'message fade-in';
                    responseElement.innerHTML = `
                        <strong>–ë–æ—Ç:</strong> ${response}
                        <div style="color: #888; font-size: 12px; margin-top: 5px;">–¢–æ–ª—å–∫–æ —á—Ç–æ</div>
                    `;
                    messagesContainer.appendChild(responseElement);
                    messagesContainer.scrollTop = messagesContainer.scrollHeight;
                }, 1000);
            }
        }

        function simulateOnlineUsers() {
            onlineUsers = [
                { name: '–ê–ª–µ–∫—Å–µ–π', username: '@alex', avatar: 'üòé', avatar_bg: '#3b82f6' },
                { name: '–ú–∞—Ä–∏—è', username: '@maria', avatar: 'üë©', avatar_bg: '#ec4899' },
                { name: '–î–º–∏—Ç—Ä–∏–π', username: '@dmitry', avatar: 'üßë', avatar_bg: '#10b981' }
            ];
        }

        function register() {
            const name = document.getElementById('regName').value.trim();
            const username = document.getElementById('regUsername').value.trim();
            
            if (!name) {
                document.getElementById('registerError').textContent = '–í–≤–µ–¥–∏—Ç–µ –∏–º—è';
                return;
            }
            
            document.getElementById('registerBtn').disabled = true;
            document.getElementById('registerBtn').innerHTML = '<span>‚è≥ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...</span>';
            document.getElementById('registerError').textContent = '';
            
            console.log("üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:", { name, username });
            
            // –ò–º–∏—Ç–∞—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            setTimeout(() => {
                const user_id = Date.now().toString() + Math.random().toString(36).substr(2, 9);
                const finalUsername = username || `user${Math.floor(Math.random() * 10000)}`;
                
                currentUser = {
                    id: user_id,
                    name: name,
                    username: finalUsername,
                    avatar: 'üë§',
                    avatar_bg: '#6b21a8',
                    registered_at: new Date().toISOString(),
                };
                
                localStorage.setItem('dlcurrentUser', JSON.stringify(currentUser));
                
                document.getElementById('registerSuccess').textContent = '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!';
                document.getElementById('registerSuccess').classList.remove('hidden');
                
                setTimeout(() => {
                    showMainApp();
                }, 1000);
                
            }, 1500);
        }

        function adminLogin() {
            const password = document.getElementById('adminPass').value;
            
            if (password === 'dltrollex123') {
                currentUser = {
                    id: 'admin',
                    name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                    username: '@admin',
                    is_admin: true
                };
                localStorage.setItem('dlcurrentUser', JSON.stringify(currentUser));
                showMainApp();
                showNotification('–í—Ö–æ–¥ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤—ã–ø–æ–ª–Ω–µ–Ω', 'success');
            } else {
                document.getElementById('adminError').textContent = '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å';
            }
        }

        function logout() {
            currentUser = null;
            localStorage.removeItem('dlcurrentUser');
            location.reload();
        }

        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            notification.className = 'notification-toast';
            notification.style.background = type === 'error' ? '#ef4444' : type === 'success' ? '#10b981' : 'var(--accent-color)';
            notification.innerHTML = `
                <div style="display: flex; align-items: center; gap: 10px;">
                    <div style="font-size: 20px;">${type === 'error' ? '‚ùå' : type === 'success' ? '‚úÖ' : 'üí°'}</div>
                    <div>${message}</div>
                </div>
            `;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.remove();
                }
            }, 5000);
        }

        // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
        function addNews() {
            const newsText = document.getElementById('newsText').value;
            if (newsText) {
                showNotification('–ù–æ–≤–æ—Å—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞!', 'success');
                document.getElementById('newsText').value = '';
            }
        }

        function clearAllData() {
            if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã? –≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ!')) {
                localStorage.clear();
                showNotification('–í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã', 'success');
                setTimeout(() => location.reload(), 1000);
            }
        }

        function restartServer() {
            showNotification('–°–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...', 'success');
            setTimeout(() => {
                showNotification('–°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!', 'success');
            }, 2000);
        }
    </script>
</body>
</html>
'''

@app.route('/')
def index():
    return render_template_string(HTML_TEMPLATE)

@app.route('/api/register', methods=['POST'])
def api_register():
    """API –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    try:
        data = request.get_json()
        name = data.get('name', '').strip()
        username = data.get('username', '').strip()
        
        if not name:
            return jsonify({'success': False, 'message': '–í–≤–µ–¥–∏—Ç–µ –∏–º—è'})
        
        user_id = generate_user_id()
        final_username = username or f"user{random.randint(10000, 99999)}"
        
        user_data = {
            'id': user_id,
            'name': name,
            'username': final_username,
            'avatar': 'üë§',
            'avatar_bg': '#6b21a8',
            'registered_at': datetime.datetime.now().isoformat(),
        }
        
        users_db[user_id] = user_data
        
        return jsonify({'success': True, 'user': user_data})
        
    except Exception as e:
        return jsonify({'success': False, 'message': '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'})

def create_app():
    return app

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 10000))
    print("üöÄ –ó–∞–ø—É—Å–∫ DLtrollex –Ω–∞ Render...")
    print("üíú –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!")
    print(f"üîó –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://0.0.0.0:{port}")
    print("üéØ –ê–Ω–∏–º–∞—Ü–∏–∏ –∫–Ω–æ–ø–æ–∫ —Ä–∞–±–æ—Ç–∞—é—Ç!")
    print("üêõ –í—Å–µ –±–∞–≥–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")
    print("‚ú® –î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏: —á–∞—Ç, —Ç–µ–º—ã, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏!")
    
    app.run(host='0.0.0.0', port=port, debug=False)
